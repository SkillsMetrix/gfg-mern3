const iconElement = document.querySelector(".weather-icon")
const locationIcon = document.querySelector(".location-icon")
const tempElement = document.querySelector(".temprature-value p")
const descElement = document.querySelector(".temprature-description p")
const locationElement = document.querySelector(".location p")
const notificationElement = document.querySelector(".notification")

var input= document.getElementById("search")
let city =""
let latitude= 0.0
let longitude= 0.0


input.addEventListener("keyup" , function(event) {

    if(event.keyCode ===13 ){
        event.preventDefault();

        city=input.value
        getSearchWeather(city)
        console.log(city)
    }
})
const weather ={}

weather.temprature ={
    unit: "celsius"
}

const KELVIN =273

const key='b3aaa0b3323c0baab93aff38f75b44cb'

if("geolocation" in navigator) {
    navigator.geolocation.getCurrentPosition(setPosition,showError)
} else {
    notificationElement.style.display ='block'
    notificationElement.innerHTML ='<p> Browser doesnt support geolocation </p>'
}

function setPosition(position) {
    latitude =position.coords.latitude
    logitude =position.coords.longitude

    getWeather(latitude,longitude)
}
locationIcon.addEventListener("click" ,function(event){
    console.log('hey')
    getWeather(latitude,longitude)
})

function showError(error) {
    notificationElement.style.display="block"
    notificationElement.innerHTML= `<p> ${error.message} </p>`
}
function getSearchWeather(city) {
    let api= `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${key}`

    fetch(api)
    .then(function (response) {
        let data= response.json()
        return data
    })
    .then(function( data) {
        weather.temprature.value=Math.floor(data.main.temp -KELVIN)
        weather.description=data.weather[0].description
        weather.iconId= data.weather[0].icon
        weather.city= data.name
        weather.country= data.sys.country
    })
    .then(function() {
        displayWeather()
    })
}
function getWeather(latitude,logitude) {
   let api= `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${key}`

   fetch(api)
    .then(function (response) {
        let data= response.json()
        return data
    })
    .then(function( data) {
        weather.temprature.value=Math.floor(data.main.temp -KELVIN)
        weather.description=data.weather[0].description
        weather.iconId= data.weather[0].icon
        weather.city= data.name
        weather.country= data.sys.country
    })
    .then(function() {
        displayWeather()
    })
}

function displayWeather() {

    iconElement.innerHTML=`<img src="icons/${weather.iconId}.png"/>`
    tempElement.innerHTML=`${weather.temprature.value} *<span>C<span>`
    descElement.innerHTML=weather.description
    locationElement.innerHTML=`${weather.city}, ${weather.country}`
}







body{
    background-image: url('bg.jpg');
    background-color: steelblue;
    height: 500px;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
}
.container{
    width: 50%;
    background-color: wheat;
    align-self: center;
    display: block;
    margin: 100px auto;
    border-radius: 10px;
    padding-bottom: 50px;
    box-shadow: 5px 10px 20px black;
}
.app-title{
    width: 100%;
    height: 150px;
    border-radius: 10px 10px 0 0;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;

}
.app-title header{
    text-align: center;
    padding: 15px;
    margin: 0 auto;
    font-size: 1.2em;
    color: blue;
}
#search{
    display: block;
    margin-left: auto;
    margin-right: auto;
    padding: 5px;
    width: 40%;
    height: 20px;
    border-radius: 5px;
    outline: none;
    border: 3-x solid steelblue;
}
.notification{
    background-color: white;
    display: none;
}
.notification p{
    color: maroon;
    font-size: 1.2em;
    margin: 0;
    text-align: center;
    padding: 10px 0;
}
.weather-container{
    width: 100%;
    height: 260px;
    background-color: white;
    margin-top: 20px;
}
.weather-icon img{
    display: block;
    margin: 0 auto;
}
.location-icon{
    width: 100%;
    height: 40px;
    padding: 10px;
}
.location-icon img{
    display: block;
    width: 32px;
    margin: 10px auto;
    cursor: pointer;
    padding: 5px;
    border: steelblue solid 2px;
    border-radius: 10px;
    color: steelblue;

}
.temprature-value p{
    padding: 0;
    margin: 0;
    color: blueviolet;
    font-size: 4em;
    text-align: center;
}
.temprature-value span{
    color: blueviolet;
    font-size: 0.5em;
}
.temprature-description p{
    padding: 8px;
    margin: 0;
    color: black;
    text-align: center;
    font-size: 1.2em;
}
.location p{
    margin: 0;
    padding: 0;
    color: black;
    text-align: center;
    font-size: 0.8em;
}

div.relative{
    position: absolute;
    top: 600px;
    right: 120px;
}
.location p{
    margin: 0;
    padding: 0;
    color: black;
    text-align: center;
    font-size: 0.8em;
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="app.css" />
</head>
<body>
   <div class="container">
       <div class='app-title'>
           <p> weather info</p>
           <input
           id='search'
           type='text'
           placeholder="Enter the city "
           autocomplete="off" />

           <div class="location-icon">
       <img src="icons/location.png" alt="">
    </div>
</div>

<div class="notification"></div>
<div class="weather-container">
    <div class=weather-icon>
        <img src="icons/unknown.png" alt="">
    </div>


       <div class="temprature-value">
           <p>- * <span>C</span></p>
       </div>
       <div class='temprature-description'>
           <p>-</p>
       </div>
       <div class="location">
           <p>-</p>
       </div>
</div>
   </div>
   <script src="app.js">mn</script>
</body>
</html>
